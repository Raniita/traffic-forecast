openapi: "3.0.3"
info:
  title: "Traffic Forecast"
  description: "Microservice app that enables the possibility to create a network, add monitored interfaces and add traffic to an especified interface. With the monitored interfaces info, we can perform a forecast."
  version: "0.2.1"
servers:
 - url: "https://localhost:5000/"
security:
  - BearerAuth: []
paths:
  /networks:
    get:
      summary: Returns a list of networks
      description: Returns a list of networks by ID
      tags:
        - Networks
      responses:
        '200':
          description: Succesfully returned a list of networks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Network'

        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    post:
      description: Adds new network
      summary: Adds a network
      tags:
        - Networks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'

      responses:
        '200':
          description: Succesfully created a new network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'

        '400':
          $ref: '#/components/responses/400Error'
  
  /networks/{id_net}:
    get:
      summary: Returns data about a network
      description: Returns info about a network
      tags:
        - Networks
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
      responses:
        '200':
          description: Succesfully returned a network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'

        '400':
          $ref: '#/components/responses/400Error'

    put:
      summary: Modify data of a network
      description: Modify content of a network
      tags:
        - Networks
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      
      responses:
        '200':
          description: Succesfully modified a network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'

        '400':
          $ref: '#/components/responses/400Error'

    delete:
      summary: Delete a network
      description: Delete a network
      tags:
        - Networks
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
      responses:
        '200':
          description: Succesfully deleted a network
          content:
            application/json:
              schema:
                type: string

        '400':
          $ref: '#/components/responses/400Error'

  /networks/{id_net}/interfaces/:
    get:
      summary: Return a list of interfaces
      description: Returns a list of interfaces
      tags:
        - Interfaces
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
      responses:
        '200':
          description: Succesfully return the interfaces of a network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'

        '400':
          $ref: '#/components/responses/400Error'

    post:
      description: Adds new interface
      summary: Adds new interface
      tags:
        - Interfaces
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interface'

      responses:
        '200':
          description: Succesfully created a new interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'

        '400':
          $ref: '#/components/responses/400Error'

  /networks/{id_net}/interfaces/{id_if}:
    get:
      summary: Return data about an interface
      description: Return data about an interface
      tags:
        - Interfaces
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
        - $ref: '#/components/parameters/InterfaceIn'
      responses:
        '200':
          description: Succesfully returned an interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'
        
        '400':
          $ref: '#/components/responses/400Error'

    put:
      summary: Modify data of an interface
      description: Modify data of an interface
      tags:
        - Interfaces
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
        - $ref: '#/components/parameters/InterfaceIn'
      responses:
        '200':
          description: Succesfully modified an interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interface'

        '400':
          $ref: '#/components/responses/400Error'

    
    delete:
      summary: Delete an interface
      description: Delete an interface
      tags:
        - Interfaces
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
        - $ref: '#/components/parameters/InterfaceIn'
      responses:
        '200':
          description: Succesfully deleted an interface
          content:
            application/json:
              schema:
                type: string

        '400':
          $ref: '#/components/responses/400Error'

  /samples:
    post:
      summary: Add samples to an interface
      description: Add samples to an interface
      tags:
        - Samples
      requestBody:
        description: JSON for upload the info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sample'
      responses:
        '200':
          description: Succesfully upload sample data
          content:
            application/json:
              schema:
                type: string

        '400':
          $ref: '#/components/responses/400Error'

    delete:
      summary: Delete samples of an interface
      description: Delete samples of an interfface
      tags:
        - Samples
      requestBody:
        description: JSON for delete samples
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sample'
      responses:
        '200':
          description: Succesfully upload sample data
          content:
            application/json:
              schema:
                type: string

        '400':
          $ref: '#/components/responses/400Error'

  /samples/import:
    post:
      summary: Import samples of Network provider
      description: Import samples of PLACEHOLDER
      tags:
        - Samples
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id_net:
                  type: string
                id_if:
                  type: string
                file:
                  type: string
                  format: binary

      responses:
        '201':
          description: Enqueued import
          content:
            application/json:
              schema:
                type: string

        '400':
          $ref: '#/components/responses/400Error'

  
  /query/{id_net}:
    get:
      summary: Query to return link count samples
      description: Query to return link count samples
      tags:
        - Query samples link count
      parameters:
        - $ref: '#/components/parameters/NetworkIn'
      requestBody:
        description: JSON for filtering the query
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: Succesfully get the sample data
          content:
            application/json:
              schema:
                type: string

        '400':
          $ref: '#/components/responses/400Error'

  /forecast:
    post:
      summary: Run monitor forecast
      description: Run monitor forecast using Server-Side Event (SSE) procedure
      tags:
        - Forecasts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Forecast'
      responses:
        '201': 
          description: Enqueued forecast
          content:
            application/json:
              schema:
                # TODO
                type: string

        '400':
          $ref: '#/components/responses/400Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Network:
      type: object
      maxItems: 4
      required:
        - id_net
      properties:
        id_net:
          type: string
          description: Network identifier
        ip_net:
          type: string
          description: IP network
        name:
          type: string
          description: Name of network
        description:
          type: string
          description: Short description of network

    Interface:
      type: object
      maxItems: 6
      required:
        - id_net
        - id_if
      properties:
        id_net:
          type: string
          description: Network identifier
        id_if:
          type: string
          description: Interface identifier
        name:
          type: string
          description: Name of interface
        description:
          type: string
          description: Short description of interface

    Sample:
      type: object
      maxItems: 10
      required:
        - ""
      properties:
        id_net:
          type: string
          description: Network identifier
        id_if:
          type: string
          description: Interface identifier
        samples:
          type: object
          properties:
            timestamp:
              type: integer
            mode:
              type: string
            link_count:
              type: number

    Query:
      type: object
      maxItems: 10
      required:
        - id_if
        - key
        - startTs
        - endTs
        - limit
      properties:
        id_if:
          type: string
          title: ID of interface
        key:
          type: string
          title: Select over TX or RX link count
        startTs:
          type: integer
          title: Epoch start (ms)
        endTs:
          type: integer
          title: Epoch end (ms)
        limit:
          type: integer
          title: Limit number of points returned
        opt:
          type: object
          title: Optional parameters
          maxItems: 5
          properties:
            percentil:
              type: integer
              title: Max percentil
      example:
        id_if: "5"
        key: "rx"
        startTs: 23123
        endTs: 25123
        limit: 5000
        opt:
          percentil: 0.95

    Forecast:
      type: object
      maxItems: 4
      required:
        - id_net
        - id_if
      properties:
        id_net:
          type: string
          description: Network identifier
        id_if:
          type: string
          description: Interface identifier
        key:
          type: string
          title: Select over 'tx' or 'rx'
        startTs:
          type: integer
          description: Epoch timestamp start (ms)
        endTs:
          type: integer
          description: Epoch timestamp end (ms)
        options:
          type: object
          maxItems: 1
          properties:
            confidence_interval:
              type: string
            holidays:
              type: string
            seasonality:
              type: string
            seasonality_mode:
              type: string
            interval_width:
              type: string
            changepoint_prior_scale:
              type: string

    Error:
      type: object
      maxItems: 1
      required: 
        - message
      properties:
        message:
          type: string
          title: Error Message
          description: Error Message

  parameters:
    NetworkIn:
      name: id_net
      description: ID of a network
      in: path
      required: true
      schema:
        type: integer

    InterfaceIn:
      name: id_if
      description: ID of an interface
      in: path
      required: true
      schema:
        type: integer

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'