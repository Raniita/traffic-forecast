version: '3.8'

services:
  traffic_forecast:
    build: ./backend
    container_name: tf_api
    restart: unless-stopped
    environment:
      - POSTGRES_USER=monitor
      - POSTGRES_PASSWORD=forecast2022
      - POSTGRES_DB=traffic-forecast
      - INFLUX_TOKEN=WCkcYu0ajtEJokr0AaWMpGB2sQo6sTYE0mQAEaaJRJn25rC3rrAEMsneEbJYL-HTe77FFGaJNPsQTPdyzvMdMQ==
      - SECRET_KEY=upct2022_sk
    volumes:
      - ./backend:/app
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - traefik.enable=true
      - traefik.http.routers.tf-api.entryPoints=web-secure
      - traefik.http.routers.tf-api.rule=Host(`tfm-api.ranii.pro`)
      - traefik.http.routers.tf-api.tls.certresolver=default
      - traefik.http.services.tf-api.loadbalancer.server.port=5000
    depends_on:
      - db
      - adminer
      - influxdb

  db:
    image: postgres:13
#    expose:
#      - 5432
    environment:
      - POSTGRES_USER=monitor
      - POSTGRES_PASSWORD=forecast2022
      - POSTGRES_DB=traffic-forecast
    volumes:
      - ./data/postgres_db:/var/lib/postgressql/data

  adminer:
    image: adminer
    container_name: tf-adminer
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.tf-adminer.entryPoints=web-secure
      - traefik.http.routers.tf-adminer.rule=Host(`tfm-api.ranii.pro`) && Path(`/database`)
      - traefik.http.routers.tf-adminer.tls.certresolver=default
      - traefik.http.services.tf-adminer.loadbalancer.server.port=8080

  influxdb:
    image: influxdb:latest
    volumes:
      - ./data/influxdb/data:/var/lib/influxdb2:rw
#    environment:
#      - DOCKER_INFLUXDB_INIT_MODE=setup
#      - DOCKER_INFLUXDB_INIT_USERNAME=admin
#      - DOCKER_INFLUXDB_INIT_PASSWORD=12345678
#      - DOCKER_INFLUXDB_INIT_ORG=e-lighthouse
#      - DOCKER_INFLUXDB_INIT_BUCKET=test-bucket
    ports:
      - 8086:8086